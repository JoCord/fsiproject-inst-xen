#!/bin/sh
#
#   vicmd.sh - call command with log
#
#   This program is free software; you can redistribute it and/or modify it under the 
#   terms of the GNU General Public License as published by the Free Software Foundation;
#   either version 3 of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
#   without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
#   See the GNU General Public License for more details.
#  
#   You should have received a copy of the GNU General Public License along with this program; 
#   if not, see <http://www.gnu.org/licenses/>.
#
masterip="none"
pool="none"
timeout=10
haabort=30
hacount=0
hasr="none"
hasruuid="none"
MHF="none"
waitend=10
waittime=15
waitcount=0

ver="1.0.05 - 7.2.2016"
retc=0
ls=""
progname=${0##*/}
SOURCE="${BASH_SOURCE[0]}"
DIR="$( dirname "$SOURCE" )"
while [ -h "$SOURCE" ]; do 
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
  DIR="$( cd -P "$( dirname "$SOURCE"  )" && pwd )"
done
export progdir="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
if [ -z $fsifunc ]; then export fsifunc="/usr/bin/fsifunc.sh"; fi
if [ -f $fsifunc ]; then
   . $fsifunc
   . $fsivars
else
   echo "ERROR cannot load fsi functions $fsifunc"
   exit 99
fi
if [ -z $logfile ]; then logfile=$fsidir"/"$progname".log"; fi


# main ------------------------------------------------------------------------------------------------------------------------------------

if [ -z "$1" ] ; then
    errmsg "no command to execute given"
    retc=99
fi

if [ "$1" == "--help" ] ; then
    echo 
    echo "vicmd.sh - Call a command with log"
    echo 
    echo "example: vicmd.sh \"xe host-list\""
    echo 
    exit 0
fi

if [ $retc -eq 0 ]; then
   debmsg " cmd: $*"
   OUTPUT=$(2>&1 $*)
   retc=$?
   if [ $retc -ne 0 ] ; then
      errmsg "execute cmd [$1]"
      errmsg "output: [$OUTPUT]"
   else
      debmsg " ok"
      tracemsg "output: [$OUTPUT]"
   fi
fi

infmsg "End routine rc=$retc"
exit $retc



